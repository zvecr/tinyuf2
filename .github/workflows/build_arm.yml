name: Build ARM

on:
  pull_request:
  push:
  repository_dispatch:
  release:
    types:
      - published

jobs:

  # ---------------------------------------
  # Build ARM family
  # ---------------------------------------
  ARM:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        board:
        - 'altv2'
        - 'ctrlv2'
        - 'shiftv2'
        
    steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Checkout common submodules in lib
      run: git submodule update --init lib/tinyusb lib/uf2

    - name: Checkout linkermap
      uses: actions/checkout@v3
      with:
         repository: hathach/linkermap
         path: linkermap

    - name: Install ARM GCC
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      with:
        release: '12.2.Rel1'

    - name: Find Port
      run: |
        ENV_PORT=`echo ports/*/boards/${{ matrix.board }}`
        ENV_PORT=`dirname $ENV_PORT`
        ENV_PORT=`dirname $ENV_PORT`
        echo ENV_PORT=$ENV_PORT >> $GITHUB_ENV
        echo BIN_PATH=$ENV_PORT/_bin/${{ matrix.board }} >> $GITHUB_ENV
        pip3 install linkermap/

    - name: Build
      run: |
        arm-none-eabi-gcc --version
        make -C $ENV_PORT BOARD=${{ matrix.board }} get-deps
        make -C $ENV_PORT BOARD=${{ matrix.board }} all self-update copy-artifact
        for app in ${{ env.ENV_PORT }}/apps/*/; do if [ $app != 'apps/self_update/' ]; then make -C $app BOARD=${{ matrix.board }} all; fi done

    - name: Linker Map
      run: make -C $ENV_PORT BOARD=${{ matrix.board }} linkermap

    - name: Check Oversized
      run: find ${{ env.ENV_PORT }}/_build/${{ matrix.board }}/ -maxdepth 1 -name "*${{ matrix.board }}.bin" -size -16k | grep -q "${{ matrix.board }}.bin"

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.board }}
        path: ${{ env.BIN_PATH }}

    - name: Prepare Release Asset
      if: ${{ github.event_name == 'release' }}
      run: |
        for f in ${{ env.ENV_PORT }}/_build/${{ matrix.board }}/*.*; do mv $f production-${f%.*}-${{ github.event.release.tag_name }}."${f#*.}"; done
        for f in ${{ env.BIN_PATH }}/*; do mv $f ${f%.*}-${{ github.event.release.tag_name }}."${f#*.}"; done
        zip -jr tinyuf2-${{ matrix.board }}-${{ github.event.release.tag_name }}.zip ${{ env.BIN_PATH }}

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name == 'release' }}
      with:
        files: |
          ${{ env.ENV_PORT }}/_build/${{ matrix.board }}/tinyuf2-${{ matrix.board }}-*.hex
          ${{ env.BIN_PATH }}/update-tinyuf2-${{ matrix.board }}-*.uf2
